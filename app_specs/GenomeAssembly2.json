{
  "description": "Assemble reads into a set of contigs",
  "id": "GenomeAssembly2",
  "label": "Assemble WGS reads",
  "parameters": [
    {
      "allow_multiple": true,
      "default": null,
      "group": [
        {
          "desc": "FASTQ or FASTA file of reads",
          "id": "read1",
          "label": "Read file 1",
          "required": 1,
          "type": "wstype",
          "wstype": "ReadFile"
        },
        {
          "desc": "FASTQ or FASTA file of reads",
          "id": "read2",
          "label": "Read file 2",
          "required": 0,
          "type": "wstype",
          "wstype": "ReadFile"
        },
        {
          "default": "infer",
          "desc": "Sequencing platform used to generate the read library",
          "enum": [
            "infer",
            "illumina",
            "pacbio",
            "pacbio_hifi",
            "nanopore"
          ],
          "id": "platform",
          "label": "Sequencing Platform",
          "required": 0,
          "type": "enum"
        },
        {
          "default": false,
          "id": "interleaved",
          "label": "Are the paired end reads interleaved?",
          "required": false,
          "type": "bool"
        },
        {
          "default": false,
          "id": "read_orientation_outward",
          "label": "Do the two reads in each pair face outward?",
          "required": false,
          "type": "bool"
        }
      ],
      "id": "paired_end_libs",
      "required": 0,
      "type": "group"
    },
    {
      "allow_multiple": true,
      "default": null,
      "group": [
        {
          "desc": "FASTQ, FASTA or H5 file of reads",
          "id": "read",
          "label": "Read file",
          "required": 1,
          "type": "wstype",
          "wstype": "ReadFile"
        },
        {
          "default": "infer",
          "desc": "Sequencing platform used to generate the read library",
          "enum": [
            "infer",
            "illumina",
            "pacbio",
            "pacbio_hifi",
            "nanopore"
          ],
          "id": "platform",
          "label": "Sequencing Platform",
          "required": 0,
          "type": "enum"
        }
      ],
      "id": "single_end_libs",
      "required": 0,
      "type": "group"
    },
    {
      "allow_multiple": true,
      "default": null,
      "desc": "Sequence Read Archive (SRA) Run ID",
      "id": "srr_ids",
      "label": "SRR ID",
      "required": 0,
      "type": "string"
    },
    {
      "id": "max_bases",
      "default": 10000000000,
      "desc": "Maximum bases across all input read files triggering downsampling.",
      "label": "Maximum bases",
      "required": 0,
      "type": "int"
    },
    {
      "default": "auto",
      "desc": "Recipe used for assembly",
      "enum": [
        "auto",
        "unicycler",
	    "flye",
	    "meta-flye",
        "canu",
        "spades",
        "meta-spades",
        "plasmid-spades",
        "single-cell",
        "megahit"
      ],
      "id": "recipe",
      "label": "Assembly recipe",
      "required": 0,
      "type": "enum"
    },
    {
      "default": 2,
      "desc": "Racon polishing iterations (for long reads)",
      "id": "racon_iter",
      "label": "Racon iterations",
      "required": 0,
      "type": "int"
    },
    {
      "default": 2,
      "desc": "Pilon polishing iterations (for short reads)",
      "id": "pilon_iter",
      "label": "Pilon iterations",
      "required": 0,
      "type": "int"
    },
    {
      "default": false,
      "desc": "Trim reads before assembly",
      "id": "trim",
      "label": "trim_reads",
      "required": 0,
      "type": "boolean"
    },
    {
      "default": 200,
      "desc": "Target depth for BBNorm and Filtlong",
      "id": "target_depth",
      "label": "target_depth",
      "required": 0,
      "type": "int"
    },
    {
      "default": false,
      "desc": "Normalize reads using BBNorm before assembly",
      "id": "normalize",
      "label": "normalize_reads",
      "required": 0,
      "type": "boolean"
    },
    {
      "default": false,
      "desc": "Filter long reads on length and quality to target depth",
      "id": "filtlong",
      "label": "filter_long_reads",
      "required": 0,
      "type": "boolean"
    },
    {
      "default": 5000000,
      "desc": "Estimated genome size (used for canu and flye and filtlong)",
      "id": "genome_size",
      "label": "Genome Size",
      "required": 0,
      "type": "int"
    },
    {
      "default": 300,
      "desc": "Filter out short contigs in final assembly",
      "id": "min_contig_len",
      "label": "Minimal output contig length",
      "required": 0,
      "type": "int"
    },
    {
      "default": 5,
      "desc": "Filter out contigs with low read depth in final assembly",
      "id": "min_contig_cov",
      "label": "Minimal output contig coverage",
      "required": 0,
      "type": "float"
    },
    {
      "default": null,
      "desc": "Path to which the output will be written. Defaults to the directory containing the input data. ",
      "id": "output_path",
      "label": "Output Folder",
      "required": 1,
      "type": "folder"
    },
    {
      "default": null,
      "desc": "Basename for the generated output files. Defaults to the basename of the input data.",
      "id": "output_file",
      "label": "File Basename",
      "required": 1,
      "type": "wsid"
    },
    {
      "default": 0,
      "desc": "Debugging level.",
      "id": "debug",
      "label": "Debug level",
      "required": 0,
      "type": "int"
    },
    {
      "id": "max_bases",
      "desc": "Limit on how much data will be allowed.",
      "label": "Maximum DNA bases",
      "required": 0,
      "type": "int"
    }
  ],
  "script": "App-GenomeAssembly2"
}
